{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.11.1.770",
      "templateHash": "8487951570350022872"
    }
  },
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "jbossuser",
      "metadata": {
        "description": "User name for the Virtual Machine"
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "password",
        "sshPublicKey"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine"
      }
    },
    "adminPasswordOrSSHKey": {
      "type": "secureString",
      "minLength": 12,
      "metadata": {
        "description": "Password or SSH key for the Virtual Machine"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "jbossEAPUserName": {
      "type": "string",
      "metadata": {
        "description": "User name for the JBoss EAP Manager"
      }
    },
    "jbossEAPPassword": {
      "type": "secureString",
      "minLength": 12,
      "metadata": {
        "description": "Password for the JBoss EAP Manager"
      }
    },
    "rhsmUserName": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "User name for Red Hat subscription Manager"
      }
    },
    "rhsmPassword": {
      "type": "secureString",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "Password for Red Hat subscription Manager"
      }
    },
    "rhsmPoolEAP": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "Red Hat Subscription Manager Pool ID (Should have EAP entitlement)"
      }
    },
    "rhsmPoolRHEL": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "Red Hat Subscription Manager Pool ID (Should have RHEL entitlement). Mandartory if you select the BYOS RHEL OS License Type"
      }
    },
    "bootDiagnostics": {
      "type": "string",
      "defaultValue": "off",
      "allowedValues": [
        "on",
        "off"
      ]
    },
    "bootStorageNewOrExisting": {
      "type": "string",
      "defaultValue": "New",
      "allowedValues": [
        "New",
        "Existing"
      ],
      "metadata": {
        "description": "Specify whether to create a new or use an existing Storage Account."
      }
    },
    "existingStorageAccount": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the existing Storage Account Name"
      }
    },
    "bootStorageAccountName": {
      "type": "string",
      "defaultValue": "[format('jbboot{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the Storage Account."
      }
    },
    "storageAccountKind": {
      "type": "string",
      "defaultValue": "Storage",
      "metadata": {
        "description": "Storage account kind"
      }
    },
    "storageAccountResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Name of the resource group for the existing storage account"
      }
    },
    "bootStorageReplication": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS"
      ],
      "metadata": {
        "description": "Select the Replication Strategy for the Storage account"
      }
    },
    "virtualNetworkNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Specify whether to create a new or existing virtual network for the VM."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "jbosseap-vnet",
      "metadata": {
        "description": "Name of the existing or new VNET"
      }
    },
    "virtualNetworkResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Resource group of VIrtual network"
      }
    },
    "addressPrefixes": {
      "type": "array",
      "defaultValue": [
        "10.0.0.0/16"
      ],
      "metadata": {
        "description": "Address prefix of the VNET."
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "jbosseap-server-subnet",
      "metadata": {
        "description": "Name of the existing or new Subnet"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Address prefix of the subnet"
      }
    },
    "vmssName": {
      "type": "string",
      "defaultValue": "jbossvmss",
      "maxLength": 9,
      "metadata": {
        "description": "String used as a base for naming resources (9 characters or less). A hash is prepended to this string for some resources, and resource-specific information is appended"
      }
    },
    "instanceCount": {
      "type": "int",
      "defaultValue": 2,
      "maxValue": 100,
      "minValue": 2,
      "metadata": {
        "description": "Number of VM instances (100 or less)"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine scale set"
      }
    },
    "jdkVersion": {
      "type": "string",
      "defaultValue": "openjdk17",
      "metadata": {
        "description": "The JDK version of the Virtual Machine"
      }
    },
    "artifactsLocation": {
      "type": "string",
      "defaultValue": "[deployment().properties.templateLink.uri]",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated"
      }
    },
    "artifactsLocationSasToken": {
      "type": "secureString",
      "defaultValue": "",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated"
      }
    },
    "connectSatellite": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Connect to an existing Red Hat Satellite Server."
      }
    },
    "satelliteActivationKey": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "Red Hat Satellite Server activation key."
      }
    },
    "satelliteOrgName": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "Red Hat Satellite Server organization name."
      }
    },
    "satelliteFqdn": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "Red Hat Satellite Server VM FQDN name."
      }
    },
    "guidValue": {
      "type": "string",
      "defaultValue": "[take(replace(newGuid(), '-', ''), 6)]"
    },
    "enableAppGWIngress": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "true to set up Application Gateway ingress."
      }
    },
    "subnetForAppGateway": {
      "type": "string",
      "defaultValue": "jboss-appgateway-subnet",
      "metadata": {
        "description": "Name of the existing or new Subnet"
      }
    },
    "subnetPrefixForAppGateway": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "Address prefix of the subnet"
      }
    },
    "keyVaultSku": {
      "type": "string",
      "defaultValue": "Standard",
      "metadata": {
        "description": "Price tier for Key Vault."
      }
    },
    "utcValue": {
      "type": "string",
      "defaultValue": "[utcNow()]",
      "metadata": {
        "description": "UTC value for generating unique names."
      }
    },
    "dnsNameforApplicationGateway": {
      "type": "string",
      "defaultValue": "jbossgw",
      "metadata": {
        "description": "DNS prefix for ApplicationGateway"
      }
    },
    "keyVaultSSLCertDataSecretName": {
      "type": "string",
      "defaultValue": "kv-ssl-data",
      "metadata": {
        "description": "The name of the secret in the specified KeyVault whose value is the SSL Certificate Data for Appliation Gateway frontend TLS/SSL."
      }
    },
    "enableCookieBasedAffinity": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "true to enable cookie based affinity."
      }
    },
    "enableDB": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Boolean value indicating, if user wants to enable database connection."
      }
    },
    "databaseType": {
      "type": "string",
      "defaultValue": "postgresql",
      "metadata": {
        "description": "One of the supported database types"
      },
      "allowedValues": [
        "postgresql"
      ]
    },
    "jdbcDataSourceJNDIName": {
      "type": "string",
      "defaultValue": "jdbc/contoso",
      "metadata": {
        "description": "JNDI Name for JDBC Datasource"
      }
    },
    "dsConnectionURL": {
      "type": "string",
      "defaultValue": "jdbc:postgresql://contoso.postgres.database:5432/testdb",
      "metadata": {
        "description": "JDBC Connection String"
      }
    },
    "dbUser": {
      "type": "string",
      "defaultValue": "contosoDbUser",
      "metadata": {
        "description": "User id of Database"
      }
    },
    "dbPassword": {
      "type": "secureString",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "Password for Database"
      }
    }
  },
  "variables": {
    "containerName": "eapblobcontainer",
    "var_eapStorageAccountName": "[format('jbosstrg{0}', uniqueString(resourceGroup().id))]",
    "eapstorageReplication": "Standard_LRS",
    "var_vmssInstanceName": "[format('jbosseap-server{0}', parameters('vmssName'))]",
    "nicName": "jbosseap-server-nic",
    "bootDiagnosticsCheck": "[and(equals(parameters('bootStorageNewOrExisting'), 'New'), equals(parameters('bootDiagnostics'), 'on'))]",
    "var_bootStorageName": "[if(equals(parameters('bootStorageNewOrExisting'), 'Existing'), parameters('existingStorageAccount'), parameters('bootStorageAccountName'))]",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
            "keyData": "[parameters('adminPasswordOrSSHKey')]"
          }
        ]
      }
    },
    "imageReference": {
      "publisher": "redhat",
      "offer": "rhel-byos",
      "sku": "rhel-lvm86-gen2",
      "version": "latest"
    },
    "plan": {
      "name": "rhel-lvm86-gen2",
      "publisher": "redhat",
      "product": "rhel-byos"
    },
    "scriptFolder": "scripts",
    "fileToBeDownloaded": "eap-session-replication.war",
    "scriptArgs": "[format('-a ''{0}'' -t \"{1}\" -p {2} -f {3}', uri(parameters('artifactsLocation'), '.'), parameters('artifactsLocationSasToken'), variables('scriptFolder'), variables('fileToBeDownloaded'))]",
    "name_keyVaultName": "[take(format('jboss-kv{0}', parameters('guidValue')), 24)]",
    "name_dnsNameforApplicationGateway": "[format('{0}{1}', parameters('dnsNameforApplicationGateway'), take(uniqueString(parameters('utcValue')), 6))]",
    "name_rgNameWithoutSpecialCharacter": "[replace(replace(replace(replace(resourceGroup().name, '.', ''), '(', ''), ')', ''), '_', '')]",
    "name_domainLabelforApplicationGateway": "[take(format('{0}-{1}', variables('name_dnsNameforApplicationGateway'), toLower(variables('name_rgNameWithoutSpecialCharacter'))), 63)]",
    "const_azureSubjectName": "[format('{0}.{1}.{2}', variables('name_domainLabelforApplicationGateway'), parameters('location'), 'cloudapp.azure.com')]",
    "name_appgwFrontendSSLCertName": "appGatewaySslCert",
    "name_appGateway": "[format('appgw{0}', uniqueString(parameters('utcValue')))]",
    "property_subnet_with_app_gateway": [
      {
        "name": "[parameters('subnetName')]",
        "properties": {
          "addressPrefix": "[parameters('subnetPrefix')]",
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('name_networkSecurityGroup'))]"
          }
        }
      },
      {
        "name": "[parameters('subnetForAppGateway')]",
        "properties": {
          "addressPrefix": "[parameters('subnetPrefixForAppGateway')]",
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('name_networkSecurityGroup'))]"
          }
        }
      }
    ],
    "property_subnet_without_app_gateway": [
      {
        "name": "[parameters('subnetName')]",
        "properties": {
          "addressPrefix": "[parameters('subnetPrefix')]"
        }
      }
    ],
    "name_publicIPAddress": "-pubIp",
    "name_networkSecurityGroup": "jboss-nsg",
    "name_appGatewayPublicIPAddress": "gwip"
  },
  "resources": [
    {
      "condition": "[and(parameters('enableAppGWIngress'), equals(parameters('virtualNetworkNewOrExisting'), 'new'))]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2022-05-01",
      "name": "[variables('name_networkSecurityGroup')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "65200-65535",
              "sourceAddressPrefix": "GatewayManager",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 500,
              "direction": "Inbound"
            },
            "name": "ALLOW_APPGW"
          },
          {
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 510,
              "direction": "Inbound",
              "destinationPortRanges": [
                "80",
                "443",
                "9990",
                "8080"
              ]
            },
            "name": "ALLOW_HTTP_ACCESS"
          }
        ]
      }
    },
    {
      "condition": "[variables('bootDiagnosticsCheck')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-05-01",
      "name": "[variables('var_bootStorageName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('bootStorageReplication')]"
      },
      "kind": "[parameters('storageAccountKind')]",
      "tags": {
        "QuickstartName": "JBoss EAP on RHEL VMSS"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-05-01",
      "name": "[variables('var_eapStorageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('eapstorageReplication')]"
      },
      "kind": "Storage",
      "tags": {
        "QuickstartName": "JBoss EAP on RHEL VMSS"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2022-05-01",
      "name": "[format('{0}/default/{1}', variables('var_eapStorageAccountName'), variables('containerName'))]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('var_eapStorageAccountName'))]"
      ]
    },
    {
      "condition": "[equals(parameters('virtualNetworkNewOrExisting'), 'new')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-05-01",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "tags": {
        "QuickstartName": "JBoss EAP on RHEL VMSS"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": "[parameters('addressPrefixes')]"
        },
        "subnets": "[if(parameters('enableAppGWIngress'), variables('property_subnet_with_app_gateway'), variables('property_subnet_without_app_gateway'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('name_networkSecurityGroup'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "2022-08-01",
      "name": "[variables('var_vmssInstanceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('vmSize')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "plan": "[variables('plan')]",
      "tags": {
        "QuickstartName": "JBoss EAP on RHEL VMSS"
      },
      "properties": {
        "overprovision": false,
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage",
              "caching": "ReadWrite"
            },
            "imageReference": "[variables('imageReference')]"
          },
          "osProfile": {
            "computerNamePrefix": "[variables('var_vmssInstanceName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPasswordOrSSHKey')]",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nicName')]",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "ipconfig",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId(parameters('virtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
                        },
                        "applicationGatewayBackendAddressPools": "[if(parameters('enableAppGWIngress'), createArray(createObject('id', resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('name_appGateway'), 'managedNodeBackendPool'))), null())]",
                        "publicIPAddressConfiguration": {
                          "name": "[format('{0}{1}', variables('var_vmssInstanceName'), variables('name_publicIPAddress'))]"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "diagnosticsProfile": "[if(equals(parameters('bootDiagnostics'), 'on'), json(format('{{\"bootDiagnostics\": {{\"enabled\": true,\"storageUri\": \"{0}\"}}}}', reference(resourceId(parameters('storageAccountResourceGroupName'), 'Microsoft.Storage/storageAccounts/', variables('var_bootStorageName')), '2021-06-01').primaryEndpoints.blob)), json('{\"bootDiagnostics\": {\"enabled\": false}}'))]",
          "extensionProfile": {
            "extensions": [
              {
                "name": "jbosseap-setup-extension",
                "properties": {
                  "publisher": "Microsoft.Azure.Extensions",
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "fileUris": [
                      "[uri(parameters('artifactsLocation'), format('scripts/jbosseap-setup-redhat.sh{0}', parameters('artifactsLocationSasToken')))]",
                      "[uri(parameters('artifactsLocation'), format('scripts/create-ds.sh{0}', parameters('artifactsLocationSasToken')))]",
                      "[uri(parameters('artifactsLocation'), format('scripts/postgresql-module.xml.template{0}', parameters('artifactsLocationSasToken')))]"
                    ]
                  },
                  "protectedSettings": {
                    "commandToExecute": "[format('sh jbosseap-setup-redhat.sh {0} ''{1}'' ''{2}'' ''{3}'' ''{4}'' ''{5}'' ''{6}'' ''{7}'' ''{8}'' ''{9}'' ''{10}'' ''{11}'' ''{12}'' ''{13}'' ''{14}'' ''{15}'' ''{16}'' ''{17}'' ''{18}'' ''{19}'' ''{20}''', variables('scriptArgs'), parameters('jbossEAPUserName'), base64(parameters('jbossEAPPassword')), parameters('rhsmUserName'), base64(parameters('rhsmPassword')), parameters('rhsmPoolEAP'), variables('var_eapStorageAccountName'), variables('containerName'), base64(listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('var_eapStorageAccountName')), '2021-04-01').keys[0].value), parameters('rhsmPoolRHEL'), parameters('connectSatellite'), base64(parameters('satelliteActivationKey')), base64(parameters('satelliteOrgName')), parameters('satelliteFqdn'), parameters('jdkVersion'), parameters('enableDB'), parameters('databaseType'), base64(parameters('jdbcDataSourceJNDIName')), base64(parameters('dsConnectionURL')), base64(parameters('dbUser')), base64(parameters('dbPassword')))]"
                  }
                }
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'app-gateway-deployment')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('var_bootStorageName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('var_eapStorageAccountName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "initialization",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "14568929871068601145"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "defaultValue": "pid"
            }
          },
          "resources": [
            {
              "condition": "[not(equals(parameters('name'), 'pid'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[parameters('name')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "1770112025391142865"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "defaultValue": "This is an empty deployment"
                    }
                  },
                  "resources": [],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "appgwEnd": {
              "type": "string",
              "value": "62974874-11fb-4fb8-b158-1c1423c60a2f"
            },
            "appgwStart": {
              "type": "string",
              "value": "30186e04-251a-48df-8669-3c9bcd4bbb25"
            },
            "dbEnd": {
              "type": "string",
              "value": "97e0dcfa-fb7d-52be-9575-4ef4c5e0205a"
            },
            "dbStart": {
              "type": "string",
              "value": "52b387ed-c667-5804-8abe-34a7d477366c"
            },
            "byosVmssEnd": {
              "type": "string",
              "value": "4f83ec5f-9495-49d1-8ec7-f8e57f69b646"
            },
            "byosVmssStart": {
              "type": "string",
              "value": "71ffc523-c3d2-459e-957f-c847127a9217"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "pid-b57c8aee-4919-4cbb-8399-f966d39d4064-partnercenter",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {},
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "1770112025391142865"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "defaultValue": "This is an empty deployment"
            }
          },
          "resources": [],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "byosVmssStartPid",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'initialization')).outputs.byosVmssStart.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "14568929871068601145"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "defaultValue": "pid"
            }
          },
          "resources": [
            {
              "condition": "[not(equals(parameters('name'), 'pid'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[parameters('name')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "1770112025391142865"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "defaultValue": "This is an empty deployment"
                    }
                  },
                  "resources": [],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "appgwEnd": {
              "type": "string",
              "value": "62974874-11fb-4fb8-b158-1c1423c60a2f"
            },
            "appgwStart": {
              "type": "string",
              "value": "30186e04-251a-48df-8669-3c9bcd4bbb25"
            },
            "dbEnd": {
              "type": "string",
              "value": "97e0dcfa-fb7d-52be-9575-4ef4c5e0205a"
            },
            "dbStart": {
              "type": "string",
              "value": "52b387ed-c667-5804-8abe-34a7d477366c"
            },
            "byosVmssEnd": {
              "type": "string",
              "value": "4f83ec5f-9495-49d1-8ec7-f8e57f69b646"
            },
            "byosVmssStart": {
              "type": "string",
              "value": "71ffc523-c3d2-459e-957f-c847127a9217"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'initialization')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "uami-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "12342995975102177614"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            }
          },
          "variables": {
            "const_roleDefinitionIdOfContributor": "b24988ac-6180-42a0-ab88-20f7382dd24c",
            "name_deploymentScriptUserDefinedManagedIdentity": "jboss-eap-vm-deployment-script-user-defined-managed-itentity",
            "name_deploymentScriptContributorRoleAssignmentName": "[guid(format('{0}{1}Deployment Script', resourceGroup().id, variables('name_deploymentScriptUserDefinedManagedIdentity')))]"
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2022-01-31-preview",
              "name": "[variables('name_deploymentScriptUserDefinedManagedIdentity')]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[variables('name_deploymentScriptContributorRoleAssignmentName')]",
              "subscriptionId": "[subscription().subscriptionId]",
              "location": "[resourceGroup().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "roleDefinitionId": {
                    "value": "[variables('const_roleDefinitionIdOfContributor')]"
                  },
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('name_deploymentScriptUserDefinedManagedIdentity'))).principalId]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "9176073725677377779"
                    }
                  },
                  "parameters": {
                    "roleDefinitionId": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "principalId": {
                      "type": "string",
                      "defaultValue": ""
                    }
                  },
                  "variables": {
                    "name_roleAssignmentName": "[guid(format('{0}{1}Role assignment in subscription scope', subscription().id, parameters('principalId')))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[variables('name_roleAssignmentName')]",
                      "properties": {
                        "description": "Assign subscription scope role to User Assigned Managed Identity ",
                        "principalId": "[parameters('principalId')]",
                        "principalType": "ServicePrincipal",
                        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "outputs": {
            "uamiIdForDeploymentScript": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('name_deploymentScriptUserDefinedManagedIdentity'))]"
            }
          }
        }
      }
    },
    {
      "condition": "[parameters('enableAppGWIngress')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "appgateway-certificates-secrets-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "identity": {
            "value": {
              "type": "UserAssigned",
              "userAssignedIdentities": {
                "[format('{0}', reference(resourceId('Microsoft.Resources/deployments', 'uami-deployment')).outputs.uamiIdForDeploymentScript.value)]": {}
              }
            }
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sku": {
            "value": "[parameters('keyVaultSku')]"
          },
          "subjectName": {
            "value": "[format('CN={0}', variables('const_azureSubjectName'))]"
          },
          "keyVaultName": {
            "value": "[variables('name_keyVaultName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "2239514067462084359"
            }
          },
          "parameters": {
            "identity": {
              "type": "object",
              "defaultValue": {}
            },
            "location": {
              "type": "string"
            },
            "permission": {
              "type": "object",
              "defaultValue": {
                "certificates": [
                  "get",
                  "list",
                  "update",
                  "create"
                ]
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "Standard",
              "metadata": {
                "description": "Price tier for Key Vault."
              }
            },
            "subjectName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Subject name to create a certificate."
              }
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": "GEN_UNIQUE",
              "metadata": {
                "description": "Current deployment time. Used as a tag in deployment script."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "kv-appgw-selfsigned-certificate-deployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "identity": {
                    "value": "[parameters('identity')]"
                  },
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "permission": {
                    "value": "[parameters('permission')]"
                  },
                  "subjectName": {
                    "value": "[parameters('subjectName')]"
                  },
                  "sku": {
                    "value": "[parameters('sku')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "9030107023202235969"
                    }
                  },
                  "parameters": {
                    "identity": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Managed identity to be used for the deployment script. Currently, only user-assigned MSI is supported."
                      }
                    },
                    "keyVaultName": {
                      "type": "string",
                      "defaultValue": "[format('jboss-kv-{0}', uniqueString(parameters('utcValue')))]",
                      "metadata": {
                        "description": "Used to name the new Azure Key Vault resoure."
                      }
                    },
                    "location": {
                      "type": "string"
                    },
                    "permission": {
                      "type": "object",
                      "defaultValue": {
                        "certificates": [
                          "get",
                          "list",
                          "update",
                          "create"
                        ]
                      },
                      "metadata": {
                        "description": "Access permission of the key vault, will applied to all access policies."
                      }
                    },
                    "secretName": {
                      "type": "string",
                      "defaultValue": "mySelfSignedCertificate",
                      "metadata": {
                        "description": "Used to name the new certificate resource."
                      }
                    },
                    "sku": {
                      "type": "string",
                      "defaultValue": "Standard",
                      "metadata": {
                        "description": "Price tier for Key Vault."
                      }
                    },
                    "subjectName": {
                      "type": "string",
                      "defaultValue": "contoso.xyz",
                      "metadata": {
                        "description": "Subject name to create a new certificate, example: 'CN=contoso.com'."
                      }
                    },
                    "utcValue": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    }
                  },
                  "variables": {
                    "const_identityId": "[substring(string(parameters('identity').userAssignedIdentities), add(indexOf(string(parameters('identity').userAssignedIdentities), '\"'), 1), sub(lastIndexOf(string(parameters('identity').userAssignedIdentities), '\"'), add(indexOf(string(parameters('identity').userAssignedIdentities), '\"'), 1)))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults",
                      "apiVersion": "2021-10-01",
                      "name": "[parameters('keyVaultName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "sku": {
                          "family": "A",
                          "name": "[parameters('sku')]"
                        },
                        "tenantId": "[subscription().tenantId]",
                        "accessPolicies": [
                          {
                            "objectId": "[reference(variables('const_identityId'), '2018-11-30').principalId]",
                            "tenantId": "[subscription().tenantId]",
                            "permissions": "[parameters('permission')]"
                          }
                        ],
                        "enabledForDeployment": false,
                        "enabledForDiskEncryption": false,
                        "enabledForTemplateDeployment": true,
                        "enableSoftDelete": true
                      },
                      "tags": {
                        "managed-by-azure-jboss": "[parameters('utcValue')]"
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2020-10-01",
                      "name": "ds-create-add-appgw-certificate",
                      "location": "[parameters('location')]",
                      "identity": "[parameters('identity')]",
                      "kind": "AzurePowerShell",
                      "properties": {
                        "forceUpdateTag": "[parameters('utcValue')]",
                        "azPowerShellVersion": "5.0",
                        "timeout": "PT30M",
                        "arguments": "[format(' -vaultName {0} -certificateName {1} -subjectName {2}', parameters('keyVaultName'), parameters('secretName'), parameters('subjectName'))]",
                        "scriptContent": "\n                    param(\n                        [string] [Parameter(Mandatory=$true)] $vaultName,\n                        [string] [Parameter(Mandatory=$true)] $certificateName,\n                        [string] [Parameter(Mandatory=$true)] $subjectName\n                    )\n\n                    $ErrorActionPreference = 'Stop'\n                    $DeploymentScriptOutputs = @{}\n\n                    $existingCert = Get-AzKeyVaultCertificate -VaultName $vaultName -Name $certificateName\n\n                    if ($existingCert -and $existingCert.Certificate.Subject -eq $subjectName) {\n\n                        Write-Host 'Certificate $certificateName in vault $vaultName is already present.'\n\n                        $DeploymentScriptOutputs['certThumbprint'] = $existingCert.Thumbprint\n                        $existingCert | Out-String\n                    }\n                    else {\n                        $policy = New-AzKeyVaultCertificatePolicy -SubjectName $subjectName -IssuerName Self -ValidityInMonths 12 -Verbose\n\n                        # private key is added as a secret that can be retrieved in the ARM template\n                        Add-AzKeyVaultCertificate -VaultName $vaultName -Name $certificateName -CertificatePolicy $policy -Verbose\n\n                        $newCert = Get-AzKeyVaultCertificate -VaultName $vaultName -Name $certificateName\n\n                        # it takes a few seconds for KeyVault to finish\n                        $tries = 0\n                        do {\n                        Write-Host 'Waiting for certificate creation completion...'\n                        Start-Sleep -Seconds 10\n                        $operation = Get-AzKeyVaultCertificateOperation -VaultName $vaultName -Name $certificateName\n                        $tries++\n\n                        if ($operation.Status -eq 'failed')\n                        {\n                            throw 'Creating certificate $certificateName in vault $vaultName failed with error $($operation.ErrorMessage)'\n                        }\n\n                        if ($tries -gt 120)\n                        {\n                            throw 'Timed out waiting for creation of certificate $certificateName in vault $vaultName'\n                        }\n                        } while ($operation.Status -ne 'completed')\n\n                        $DeploymentScriptOutputs['certThumbprint'] = $newCert.Thumbprint\n                        $newCert | Out-String\n                    }\n                ",
                        "cleanupPreference": "OnSuccess",
                        "retentionInterval": "P1D"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "keyVaultName": {
                      "type": "string",
                      "value": "[parameters('keyVaultName')]"
                    },
                    "secretName": {
                      "type": "string",
                      "value": "[parameters('secretName')]"
                    },
                    "identityId": {
                      "type": "string",
                      "value": "[variables('const_identityId')]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "keyVaultName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'kv-appgw-selfsigned-certificate-deployment')).outputs.keyVaultName.value]"
            },
            "sslCertDataSecretName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'kv-appgw-selfsigned-certificate-deployment')).outputs.secretName.value]"
            },
            "sslCertPwdSecretName": {
              "type": "string",
              "value": ""
            },
            "sslBackendCertDataSecretName": {
              "type": "string",
              "value": ""
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'uami-deployment')]"
      ]
    },
    {
      "condition": "[parameters('enableAppGWIngress')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "app-gateway-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appGatewayName": {
            "value": "[variables('name_appGateway')]"
          },
          "dnsNameforApplicationGateway": {
            "value": "[variables('name_dnsNameforApplicationGateway')]"
          },
          "gatewayPublicIPAddressName": {
            "value": "[variables('name_appGatewayPublicIPAddress')]"
          },
          "gatewaySubnetId": {
            "value": "[if(equals(parameters('virtualNetworkNewOrExisting'), 'new'), resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetForAppGateway')), extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('virtualNetworkResourceGroupName')), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetForAppGateway')))]"
          },
          "gatewaySslCertName": {
            "value": "[variables('name_appgwFrontendSSLCertName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sslCertDataSecretName": {
            "value": "[if(parameters('enableAppGWIngress'), reference(resourceId('Microsoft.Resources/deployments', 'appgateway-certificates-secrets-deployment'), '2020-10-01').outputs.sslCertDataSecretName.value, parameters('keyVaultSSLCertDataSecretName'))]"
          },
          "_pidAppgwStart": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'initialization')).outputs.appgwStart.value]"
          },
          "_pidAppgwEnd": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'initialization')).outputs.appgwEnd.value]"
          },
          "keyVaultName": {
            "value": "[variables('name_keyVaultName')]"
          },
          "enableCookieBasedAffinity": {
            "value": "[parameters('enableCookieBasedAffinity')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "10939878277698667531"
            }
          },
          "parameters": {
            "dnsNameforApplicationGateway": {
              "type": "string",
              "defaultValue": "[take(format('jbossgw{0}', uniqueString(parameters('utcValue'))), 63)]",
              "metadata": {
                "description": "DNS for ApplicationGateway"
              }
            },
            "gatewayPublicIPAddressName": {
              "type": "string",
              "defaultValue": "gwip",
              "metadata": {
                "description": "Public IP Name for the Application Gateway"
              }
            },
            "gatewaySubnetId": {
              "type": "string",
              "defaultValue": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/resourcegroupname/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/subnetname"
            },
            "gatewaySslCertName": {
              "type": "string",
              "defaultValue": "appGatewaySslCert"
            },
            "location": {
              "type": "string"
            },
            "utcValue": {
              "type": "string",
              "defaultValue": "[utcNow()]"
            },
            "appGatewayName": {
              "type": "string",
              "defaultValue": "jbossappgw"
            },
            "_pidAppgwEnd": {
              "type": "string",
              "defaultValue": "pid-networking-appgateway-end"
            },
            "_pidAppgwStart": {
              "type": "string",
              "defaultValue": "pid-networking-appgateway-start"
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": "keyVaultName"
            },
            "sslCertDataSecretName": {
              "type": "string",
              "defaultValue": "sslCertDataSecretName"
            },
            "enableCookieBasedAffinity": {
              "type": "bool",
              "defaultValue": false
            }
          },
          "variables": {
            "name_appGateway": "[parameters('appGatewayName')]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "app-gateway-deployment-with-self-signed-cert",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "appGatewayName": {
                    "value": "[variables('name_appGateway')]"
                  },
                  "dnsNameforApplicationGateway": {
                    "value": "[parameters('dnsNameforApplicationGateway')]"
                  },
                  "gatewayPublicIPAddressName": {
                    "value": "[parameters('gatewayPublicIPAddressName')]"
                  },
                  "gatewaySubnetId": {
                    "value": "[parameters('gatewaySubnetId')]"
                  },
                  "gatewaySslCertName": {
                    "value": "[parameters('gatewaySslCertName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "sslCertData": {
                    "reference": {
                      "keyVault": {
                        "id": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
                      },
                      "secretName": "[parameters('sslCertDataSecretName')]"
                    }
                  },
                  "_pidAppgwStart": {
                    "value": "[parameters('_pidAppgwStart')]"
                  },
                  "_pidAppgwEnd": {
                    "value": "[parameters('_pidAppgwEnd')]"
                  },
                  "enableCookieBasedAffinity": {
                    "value": "[parameters('enableCookieBasedAffinity')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "8492809790129335593"
                    }
                  },
                  "parameters": {
                    "dnsNameforApplicationGateway": {
                      "type": "string",
                      "defaultValue": "[take(format('jbossgw{0}', uniqueString(parameters('utcValue'))), 63)]",
                      "metadata": {
                        "description": "DNS for ApplicationGateway"
                      }
                    },
                    "gatewayPublicIPAddressName": {
                      "type": "string",
                      "defaultValue": "gwip",
                      "metadata": {
                        "description": "Public IP Name for the Application Gateway"
                      }
                    },
                    "gatewaySubnetId": {
                      "type": "string",
                      "defaultValue": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/resourcegroupname/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/subnetname"
                    },
                    "gatewaySslCertName": {
                      "type": "string",
                      "defaultValue": "appGatewaySslCert"
                    },
                    "location": {
                      "type": "string"
                    },
                    "sslCertData": {
                      "type": "secureString",
                      "defaultValue": "[newGuid()]"
                    },
                    "utcValue": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    },
                    "appGatewayName": {
                      "type": "string",
                      "defaultValue": "jbossappgw"
                    },
                    "_pidAppgwEnd": {
                      "type": "string",
                      "defaultValue": "pid-networking-appgateway-end"
                    },
                    "_pidAppgwStart": {
                      "type": "string",
                      "defaultValue": "pid-networking-appgateway-start"
                    },
                    "enableCookieBasedAffinity": {
                      "type": "bool",
                      "defaultValue": false
                    }
                  },
                  "variables": {
                    "name_appGateway": "[parameters('appGatewayName')]",
                    "const_appGatewayFrontEndHTTPPort": 80,
                    "const_appGatewayFrontEndHTTPSPort": 443,
                    "const_backendPort": 8080,
                    "name_managedBackendAddressPool": "managedNodeBackendPool",
                    "name_frontEndIPConfig": "appGwPublicFrontendIp",
                    "name_httpListener": "managedHttpListener",
                    "name_httpPort": "managedHttpPort",
                    "name_httpSetting": "managedHttpSetting",
                    "name_httpsListener": "managedHttpsListener",
                    "name_httpsPort": "managedHttpsPort",
                    "ref_backendAddressPool": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('name_appGateway'), variables('name_managedBackendAddressPool'))]",
                    "ref_backendHttpSettings": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', variables('name_appGateway'), variables('name_httpSetting'))]",
                    "ref_frontendHTTPPort": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', variables('name_appGateway'), variables('name_httpPort'))]",
                    "ref_frontendHTTPSPort": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', variables('name_appGateway'), variables('name_httpsPort'))]",
                    "ref_frontendIPConfiguration": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', variables('name_appGateway'), variables('name_frontEndIPConfig'))]",
                    "ref_httpListener": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', variables('name_appGateway'), variables('name_httpListener'))]",
                    "ref_httpsListener": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', variables('name_appGateway'), variables('name_httpsListener'))]",
                    "ref_publicIPAddress": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('gatewayPublicIPAddressName'))]",
                    "ref_sslCertificate": "[resourceId('Microsoft.Network/applicationGateways/sslCertificates', variables('name_appGateway'), parameters('gatewaySslCertName'))]",
                    "obj_frontendIPConfigurations1": [
                      {
                        "name": "[variables('name_frontEndIPConfig')]",
                        "properties": {
                          "publicIPAddress": {
                            "id": "[variables('ref_publicIPAddress')]"
                          }
                        }
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2022-05-01",
                      "name": "[parameters('gatewayPublicIPAddressName')]",
                      "sku": {
                        "name": "Standard"
                      },
                      "location": "[parameters('location')]",
                      "properties": {
                        "publicIPAllocationMethod": "Static",
                        "dnsSettings": {
                          "domainNameLabel": "[parameters('dnsNameforApplicationGateway')]"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Network/applicationGateways",
                      "apiVersion": "2022-05-01",
                      "name": "[variables('name_appGateway')]",
                      "location": "[parameters('location')]",
                      "tags": {
                        "managed-by-k8s-ingress": "true"
                      },
                      "properties": {
                        "sku": {
                          "name": "WAF_v2",
                          "tier": "WAF_v2"
                        },
                        "sslCertificates": [
                          {
                            "name": "[parameters('gatewaySslCertName')]",
                            "properties": {
                              "data": "[parameters('sslCertData')]"
                            }
                          }
                        ],
                        "gatewayIPConfigurations": [
                          {
                            "name": "appGatewayIpConfig",
                            "properties": {
                              "subnet": {
                                "id": "[parameters('gatewaySubnetId')]"
                              }
                            }
                          }
                        ],
                        "frontendIPConfigurations": "[variables('obj_frontendIPConfigurations1')]",
                        "frontendPorts": [
                          {
                            "name": "[variables('name_httpPort')]",
                            "properties": {
                              "port": "[variables('const_appGatewayFrontEndHTTPPort')]"
                            }
                          },
                          {
                            "name": "[variables('name_httpsPort')]",
                            "properties": {
                              "port": "[variables('const_appGatewayFrontEndHTTPSPort')]"
                            }
                          }
                        ],
                        "backendAddressPools": [
                          {
                            "name": "[variables('name_managedBackendAddressPool')]",
                            "properties": {}
                          }
                        ],
                        "httpListeners": [
                          {
                            "name": "[variables('name_httpListener')]",
                            "properties": {
                              "protocol": "Http",
                              "frontendIPConfiguration": {
                                "id": "[variables('ref_frontendIPConfiguration')]"
                              },
                              "frontendPort": {
                                "id": "[variables('ref_frontendHTTPPort')]"
                              }
                            }
                          },
                          {
                            "name": "[variables('name_httpsListener')]",
                            "properties": {
                              "protocol": "Https",
                              "frontendIPConfiguration": {
                                "id": "[variables('ref_frontendIPConfiguration')]"
                              },
                              "frontendPort": {
                                "id": "[variables('ref_frontendHTTPSPort')]"
                              },
                              "sslCertificate": {
                                "id": "[variables('ref_sslCertificate')]"
                              }
                            }
                          }
                        ],
                        "backendHttpSettingsCollection": [
                          {
                            "name": "[variables('name_httpSetting')]",
                            "properties": {
                              "port": "[variables('const_backendPort')]",
                              "protocol": "Http",
                              "cookieBasedAffinity": "[if(parameters('enableCookieBasedAffinity'), 'Enabled', 'Disabled')]"
                            }
                          }
                        ],
                        "requestRoutingRules": [
                          {
                            "name": "managedNodeHttpRoutingRule",
                            "properties": {
                              "priority": 3,
                              "httpListener": {
                                "id": "[variables('ref_httpListener')]"
                              },
                              "backendAddressPool": {
                                "id": "[variables('ref_backendAddressPool')]"
                              },
                              "backendHttpSettings": {
                                "id": "[variables('ref_backendHttpSettings')]"
                              }
                            }
                          },
                          {
                            "name": "managedNodeHttpsRoutingRule",
                            "properties": {
                              "priority": 4,
                              "httpListener": {
                                "id": "[variables('ref_httpsListener')]"
                              },
                              "backendAddressPool": {
                                "id": "[variables('ref_backendAddressPool')]"
                              },
                              "backendHttpSettings": {
                                "id": "[variables('ref_backendHttpSettings')]"
                              }
                            }
                          }
                        ],
                        "webApplicationFirewallConfiguration": {
                          "enabled": true,
                          "firewallMode": "Prevention",
                          "ruleSetType": "OWASP",
                          "ruleSetVersion": "3.0"
                        },
                        "enableHttp2": false,
                        "autoscaleConfiguration": {
                          "minCapacity": 2,
                          "maxCapacity": 3
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('gatewayPublicIPAddressName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "pid-app-gateway-start-deployment",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[parameters('_pidAppgwStart')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.11.1.770",
                              "templateHash": "14568929871068601145"
                            }
                          },
                          "parameters": {
                            "name": {
                              "type": "string",
                              "defaultValue": "pid"
                            }
                          },
                          "resources": [
                            {
                              "condition": "[not(equals(parameters('name'), 'pid'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[parameters('name')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.11.1.770",
                                      "templateHash": "1770112025391142865"
                                    }
                                  },
                                  "parameters": {
                                    "name": {
                                      "type": "string",
                                      "defaultValue": "This is an empty deployment"
                                    }
                                  },
                                  "resources": [],
                                  "outputs": {
                                    "name": {
                                      "type": "string",
                                      "value": "[parameters('name')]"
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "appgwEnd": {
                              "type": "string",
                              "value": "62974874-11fb-4fb8-b158-1c1423c60a2f"
                            },
                            "appgwStart": {
                              "type": "string",
                              "value": "30186e04-251a-48df-8669-3c9bcd4bbb25"
                            },
                            "dbEnd": {
                              "type": "string",
                              "value": "97e0dcfa-fb7d-52be-9575-4ef4c5e0205a"
                            },
                            "dbStart": {
                              "type": "string",
                              "value": "52b387ed-c667-5804-8abe-34a7d477366c"
                            },
                            "byosVmssEnd": {
                              "type": "string",
                              "value": "4f83ec5f-9495-49d1-8ec7-f8e57f69b646"
                            },
                            "byosVmssStart": {
                              "type": "string",
                              "value": "71ffc523-c3d2-459e-957f-c847127a9217"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "pid-app-gateway-end-deployment",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[parameters('_pidAppgwEnd')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.11.1.770",
                              "templateHash": "14568929871068601145"
                            }
                          },
                          "parameters": {
                            "name": {
                              "type": "string",
                              "defaultValue": "pid"
                            }
                          },
                          "resources": [
                            {
                              "condition": "[not(equals(parameters('name'), 'pid'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[parameters('name')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.11.1.770",
                                      "templateHash": "1770112025391142865"
                                    }
                                  },
                                  "parameters": {
                                    "name": {
                                      "type": "string",
                                      "defaultValue": "This is an empty deployment"
                                    }
                                  },
                                  "resources": [],
                                  "outputs": {
                                    "name": {
                                      "type": "string",
                                      "value": "[parameters('name')]"
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "appgwEnd": {
                              "type": "string",
                              "value": "62974874-11fb-4fb8-b158-1c1423c60a2f"
                            },
                            "appgwStart": {
                              "type": "string",
                              "value": "30186e04-251a-48df-8669-3c9bcd4bbb25"
                            },
                            "dbEnd": {
                              "type": "string",
                              "value": "97e0dcfa-fb7d-52be-9575-4ef4c5e0205a"
                            },
                            "dbStart": {
                              "type": "string",
                              "value": "52b387ed-c667-5804-8abe-34a7d477366c"
                            },
                            "byosVmssEnd": {
                              "type": "string",
                              "value": "4f83ec5f-9495-49d1-8ec7-f8e57f69b646"
                            },
                            "byosVmssStart": {
                              "type": "string",
                              "value": "71ffc523-c3d2-459e-957f-c847127a9217"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/applicationGateways', variables('name_appGateway'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "appGatewayAlias": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('gatewayPublicIPAddressName'))).dnsSettings.fqdn]"
                    },
                    "appGatewayId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/applicationGateways', variables('name_appGateway'))]"
                    },
                    "appGatewayName": {
                      "type": "string",
                      "value": "[variables('name_appGateway')]"
                    },
                    "appGatewayURL": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('gatewayPublicIPAddressName'))).dnsSettings.fqdn]"
                    },
                    "appGatewaySecuredURL": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('gatewayPublicIPAddressName'))).dnsSettings.fqdn]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "appGatewayAlias": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'app-gateway-deployment-with-self-signed-cert')).outputs.appGatewayAlias.value]"
            },
            "appGatewayId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'app-gateway-deployment-with-self-signed-cert')).outputs.appGatewayId.value]"
            },
            "appGatewayName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'app-gateway-deployment-with-self-signed-cert')).outputs.appGatewayName.value]"
            },
            "appGatewayURL": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'app-gateway-deployment-with-self-signed-cert')).outputs.appGatewayURL.value]"
            },
            "appGatewaySecuredURL": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'app-gateway-deployment-with-self-signed-cert')).outputs.appGatewaySecuredURL.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'appgateway-certificates-secrets-deployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'initialization')]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ]
    },
    {
      "condition": "[parameters('enableDB')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "dbConnectionStartPid",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'initialization')).outputs.dbStart.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "14568929871068601145"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "defaultValue": "pid"
            }
          },
          "resources": [
            {
              "condition": "[not(equals(parameters('name'), 'pid'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[parameters('name')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "1770112025391142865"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "defaultValue": "This is an empty deployment"
                    }
                  },
                  "resources": [],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "appgwEnd": {
              "type": "string",
              "value": "62974874-11fb-4fb8-b158-1c1423c60a2f"
            },
            "appgwStart": {
              "type": "string",
              "value": "30186e04-251a-48df-8669-3c9bcd4bbb25"
            },
            "dbEnd": {
              "type": "string",
              "value": "97e0dcfa-fb7d-52be-9575-4ef4c5e0205a"
            },
            "dbStart": {
              "type": "string",
              "value": "52b387ed-c667-5804-8abe-34a7d477366c"
            },
            "byosVmssEnd": {
              "type": "string",
              "value": "4f83ec5f-9495-49d1-8ec7-f8e57f69b646"
            },
            "byosVmssStart": {
              "type": "string",
              "value": "71ffc523-c3d2-459e-957f-c847127a9217"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'app-gateway-deployment')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('var_bootStorageName'))]",
        "[resourceId('Microsoft.Resources/deployments', 'initialization')]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ]
    },
    {
      "condition": "[parameters('enableDB')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "dbConnectionEndPid",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'initialization')).outputs.dbEnd.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "14568929871068601145"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "defaultValue": "pid"
            }
          },
          "resources": [
            {
              "condition": "[not(equals(parameters('name'), 'pid'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[parameters('name')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "1770112025391142865"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "defaultValue": "This is an empty deployment"
                    }
                  },
                  "resources": [],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "appgwEnd": {
              "type": "string",
              "value": "62974874-11fb-4fb8-b158-1c1423c60a2f"
            },
            "appgwStart": {
              "type": "string",
              "value": "30186e04-251a-48df-8669-3c9bcd4bbb25"
            },
            "dbEnd": {
              "type": "string",
              "value": "97e0dcfa-fb7d-52be-9575-4ef4c5e0205a"
            },
            "dbStart": {
              "type": "string",
              "value": "52b387ed-c667-5804-8abe-34a7d477366c"
            },
            "byosVmssEnd": {
              "type": "string",
              "value": "4f83ec5f-9495-49d1-8ec7-f8e57f69b646"
            },
            "byosVmssStart": {
              "type": "string",
              "value": "71ffc523-c3d2-459e-957f-c847127a9217"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'initialization')]",
        "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('var_vmssInstanceName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "byosVmssEndPid",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'initialization')).outputs.byosVmssEnd.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "14568929871068601145"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "defaultValue": "pid"
            }
          },
          "resources": [
            {
              "condition": "[not(equals(parameters('name'), 'pid'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[parameters('name')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "1770112025391142865"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "defaultValue": "This is an empty deployment"
                    }
                  },
                  "resources": [],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "appgwEnd": {
              "type": "string",
              "value": "62974874-11fb-4fb8-b158-1c1423c60a2f"
            },
            "appgwStart": {
              "type": "string",
              "value": "30186e04-251a-48df-8669-3c9bcd4bbb25"
            },
            "dbEnd": {
              "type": "string",
              "value": "97e0dcfa-fb7d-52be-9575-4ef4c5e0205a"
            },
            "dbStart": {
              "type": "string",
              "value": "52b387ed-c667-5804-8abe-34a7d477366c"
            },
            "byosVmssEnd": {
              "type": "string",
              "value": "4f83ec5f-9495-49d1-8ec7-f8e57f69b646"
            },
            "byosVmssStart": {
              "type": "string",
              "value": "71ffc523-c3d2-459e-957f-c847127a9217"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'dbConnectionEndPid')]",
        "[resourceId('Microsoft.Resources/deployments', 'initialization')]"
      ]
    }
  ],
  "outputs": {
    "appHttpURL": {
      "type": "string",
      "value": "[if(parameters('enableAppGWIngress'), uri(format('http://{0}/', reference(resourceId('Microsoft.Resources/deployments', 'app-gateway-deployment'), '2020-10-01').outputs.appGatewayURL.value), 'eap-session-replication/'), '')]"
    },
    "appHttpsURL": {
      "type": "string",
      "value": "[if(parameters('enableAppGWIngress'), uri(format('https://{0}/', reference(resourceId('Microsoft.Resources/deployments', 'app-gateway-deployment'), '2020-10-01').outputs.appGatewaySecuredURL.value), 'eap-session-replication/'), '')]"
    }
  }
}